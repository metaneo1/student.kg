#server.port=9090
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.show-sql=true
#spring.datasource.url=jdbc:postgresql://localhost:5432/student
#spring.datasource.username=postgres
#spring.datasource.password=#
#spring.datasource.initialization-mode=always
#spring.datasource.continue-on-error=true


## Spring view resolver set up
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://localhost:5432/sts
spring.datasource.username = postgres
spring.datasource.password = paroljok
spring.thymeleaf.templateResolverOrder=1

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = update
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true

spring.thymeleaf.enabled=true

spring.thymeleaf.prefix=classpath:/templates/

spring.thymeleaf.suffix=.html